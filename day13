// Code your design here
// (Booth algorithm) 4 * 4 signed multiplier 
// based on block diagram drawn in class
module day13(A,M,Q,Q_1,Out);
  input Q_1; // Q_1 representing Q-1	
  input [3:0] A,Q,M;
  output [7:0] Out; 
  integer j;
  reg [3:0] a,q,m; //  
  reg q_1;
  reg temp;
  always@(*)
    begin
      a = A;
      q = Q;
      m = M;
      q_1 = Q_1;
      for(j = 3; j >=0 ; j =j-1 )
        begin
          case({q[0],q_1})//if({q[0],q_1} == 2'b0_1)
        2'b0_1 : begin
          {temp,a} = a + m;
          {a,q,q_1} = $signed({a,q,q_1}) >>> 1'b1;
          
        end
         2'b1_0 :  ///else if({q[0],q_1}== 2'b1_0)
        begin
          {temp,a} = a + ((~m)+1);
          {a,q,q_1} = $signed({a,q,q_1}) >>> 1'b1;
          
        end
         default : //else if({q[0],q_1}== 2'b0_0 | {q[0],q_1}== 2'b1_1)
        begin
          {a,q,q_1} = $signed({a,q,q_1}) >>> 1'b1;
          
        end
          endcase
        end 	
    end
  assign Out = {a,q};
endmodule
